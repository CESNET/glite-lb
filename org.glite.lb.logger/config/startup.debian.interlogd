#! /bin/sh
### BEGIN INIT INFO
# Provides:          glite-lb-interlogd
# Required-Start:    $remote_fs $network $syslog
# Required-Stop:     $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: gLite Logging and Bookkeeping interlogger
# Description:       gLite L&B interlogger daemon sends the events stored in local
#                    files to L&B server.
### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="L&B interlogger"
NAME=glite-lb-interlogd
DAEMON=/usr/bin/$NAME
PIDFILE=/var/run/glite/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
RUN_IL=yes

GLITE_USER='glite'
GLITE_HOME=`getent passwd ${GLITE_USER} | cut -d: -f6`
GLITE_HOST_CERT="$GLITE_HOME/.certs/hostcert.pem"
GLITE_HOST_KEY="$GLITE_HOME/.certs/hostkey.pem"
KRB5_KTNAME="FILE:$GLITE_HOME/krb5kt_lb"
KRB5CCNAME="FILE:$GLITE_HOME/krb5cc_lb"
LOG4C_RCPATH="/etc/glite-lb"

[ -x "$DAEMON" ] || exit 0

[ -r /etc/profile.d/grid-env.sh ] && . /etc/profile.d/grid-env.sh
[ -r /etc/glite.conf ] && . /etc/glite.conf
[ -r /etc/glite-wms.conf ] && . /etc/glite-wms.conf
[ -r /etc/default/glite-lb ] && . /etc/default/glite-lb
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

. /lib/init/vars.sh
. /lib/lsb/init-functions

if [ "x$RUN_IL" != "xyes" ]; then
	echo "$DESC disabled."
	echo "For automatic configuration, please run glite-lb-setup script."
	echo "When configuring L&B manually, please also set RUN_IL to 'yes' in"
	echo "/etc/default/glite-lb or /etc/default/glite-lb-interlogd."
	exit 0
fi

do_start()
{
	[ -n "$LOG4C_RCPATH" ] && env="$env LOG4C_RCPATH='$LOG4C_RCPATH'"
	[ -n "$KRB5_KTNAME" ] && env="$env KRB5_KTNAME='$KRB5_KTNAME'"
	[ -n "$KRB5CCNAME" ] && env="$env KRB5CCNAME='$KRB5CCNAME'"
	[ -n "$GLITE_GSS_MECH" ] && env="$env GLITE_GSS_MECH='$GLITE_GSS_MECH'"

	if [ -n "$GLITE_HOST_CERT" -a -n "$GLITE_HOST_KEY" ]; then
		env="$env X509_USER_CERT=$GLITE_HOST_CERT X509_USER_KEY=$GLITE_HOST_KEY"
		creds=1
	else
		echo "$0: WARNING: No credentials specified." >&2
	fi

	start-stop-daemon --start --quiet --pidfile $PIDFILE \
		--chuid $GLITE_USER --exec $DAEMON --test > /dev/null \
		|| return 1
	start-stop-daemon --start --quiet --pidfile $PIDFILE \
		--chuid $GLITE_USER --exec /usr/bin/env $env $DAEMON -- \
		$GLITE_LB_IL_OPTIONS \
		|| return 2
}

do_stop()
{
	start-stop-daemon --stop --quiet --retry=TERM/10/KILL/5 --pidfile $PIDFILE --exec $DAEMON
	RETVAL="$?"
	[ "$RETVAL" = 2 ] && return 2
	start-stop-daemon --stop --quiet --oknodo --retry=0/10/KILL/5 --exec $DAEMON
	[ "$?" = 2 ] && return 2
	rm -f $PIDFILE
	return "$RETVAL"
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  status)
	status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
	;;
  restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	  0|1)
		do_start
		case "$?" in
			0) log_end_msg 0 ;;
			1) log_end_msg 1 ;; # Old process is still running
			*) log_end_msg 1 ;; # Failed to start
		esac
		;;
	  *)
		# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
