#!/bin/sh

GLITE_LOCATION=${GLITE_LOCATION:-/opt/glite}
GLITE_USER=${GLITE_USER:-glite}
GLITE_LOCATION_VAR=${GLITE_LOCATION_VAR:-${GLITE_LOCATION}/var}

[ -f /etc/glite.conf ] && . /etc/glite.conf
[ -f $GLITE_LOCATION/etc/glite-wms.conf ] && . $GLITE_LOCATION/etc/glite-wms.conf

[ -f $GLITE_LOCATION/etc/lb.conf ] && . $GLITE_LOCATION/etc/lb.conf
[ -f $GLITE_LOCATION_VAR/etc/lb.conf ] && . $GLITE_LOCATION_VAR/etc/lb.conf

[ -f $HOME/.glite.conf ] && . $HOME/.glite.conf

[ -n "$GLITE_LB_SERVER_PIDFILE" ] && pidfile=$GLITE_LB_SERVER_PIDFILE ||
	pidfile=$GLITE_LOCATION_VAR/glite-lb-bkserverd.pid

unset creds port

start()
{
	[ -n "$GLITE_HOST_CERT" -a -n "$GLITE_HOST_KEY" ] &&
		creds="-c $GLITE_HOST_CERT -k $GLITE_HOST_KEY"

	[ -z "$creds" ] && echo $0: WARNING: No credentials specified. Using default lookup which is dangerous. >&2

	[ -n "$GLITE_LB_SERVER_PORT" ] && port="-p $GLITE_LB_SERVER_PORT"

	echo -n Starting glite-lb-bkserver ...
	su $GLITE_USER -c "$GLITE_LOCATION/bin/glite-lb-bkserverd \
		$creds -i $pidfile $port" && echo " done"
}

stop()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		kill $pid
		echo -n Stopping glite-lb-bkserverd \($pid\) ...
		try=0
		while ps p $pid >/dev/null 2>&1; do 
			sleep 1;
			try=`expr $try + 1`
			if [ $try = 20 ]; then
				echo " giving up after $try retries"
				return 1
			fi
	 	done
		echo " done"
		rm -f $pidfile
	else
		echo $pidfile does not exist - glite-lb-bkserverd not running? >&2
		return 1
	fi
}

status()
{
	if [ -f $pidfile ]; then
		pid=`cat $pidfile`
		if ps p $pid >/dev/null 2>&1; then
			echo glite-lb-bkserverd running as $pid 
			return 0
		fi
	fi

	echo glite-lb-bkserverd not running
	return 1
}

case x$1 in
	xstart)	start;;
	xstop)	stop;;
	xrestart) stop; start;;
	xstatus) status;;
	x*)	echo usage: $0 start,stop,restart,status >&2
		exit 1;;
esac
